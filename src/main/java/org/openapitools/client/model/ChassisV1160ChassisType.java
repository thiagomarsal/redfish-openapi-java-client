/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Chassis_v1_16_0_ChassisType
 */
@JsonAdapter(ChassisV1160ChassisType.Adapter.class)
public enum ChassisV1160ChassisType {
  
  RACK("Rack"),
  
  BLADE("Blade"),
  
  ENCLOSURE("Enclosure"),
  
  STANDALONE("StandAlone"),
  
  RACKMOUNT("RackMount"),
  
  CARD("Card"),
  
  CARTRIDGE("Cartridge"),
  
  ROW("Row"),
  
  POD("Pod"),
  
  EXPANSION("Expansion"),
  
  SIDECAR("Sidecar"),
  
  ZONE("Zone"),
  
  SLED("Sled"),
  
  SHELF("Shelf"),
  
  DRAWER("Drawer"),
  
  MODULE("Module"),
  
  COMPONENT("Component"),
  
  IPBASEDDRIVE("IPBasedDrive"),
  
  RACKGROUP("RackGroup"),
  
  STORAGEENCLOSURE("StorageEnclosure"),
  
  OTHER("Other");

  private String value;

  ChassisV1160ChassisType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ChassisV1160ChassisType fromValue(String value) {
    for (ChassisV1160ChassisType b : ChassisV1160ChassisType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ChassisV1160ChassisType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ChassisV1160ChassisType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ChassisV1160ChassisType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ChassisV1160ChassisType.fromValue(value);
    }
  }
}

