/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The information required to authenticate to the external service.
 */
@ApiModel(description = "The information required to authenticate to the external service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class ExternalAccountProviderV120Authentication {
  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "AuthenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private Object authenticationType = null;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY = "EncryptionKey";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY)
  private String encryptionKey;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY_SET = "EncryptionKeySet";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY_SET)
  private Boolean encryptionKeySet;

  public static final String SERIALIZED_NAME_KERBEROS_KEYTAB = "KerberosKeytab";
  @SerializedName(SERIALIZED_NAME_KERBEROS_KEYTAB)
  private String kerberosKeytab;

  public static final String SERIALIZED_NAME_OEM = "Oem";
  @SerializedName(SERIALIZED_NAME_OEM)
  private Object oem = null;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_TOKEN = "Token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_USERNAME = "Username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;


  public ExternalAccountProviderV120Authentication authenticationType(Object authenticationType) {
    
    this.authenticationType = authenticationType;
    return this;
  }

   /**
   * Get authenticationType
   * @return authenticationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAuthenticationType() {
    return authenticationType;
  }


  public void setAuthenticationType(Object authenticationType) {
    this.authenticationType = authenticationType;
  }


  public ExternalAccountProviderV120Authentication encryptionKey(String encryptionKey) {
    
    this.encryptionKey = encryptionKey;
    return this;
  }

   /**
   * Specifies the encryption key.
   * @return encryptionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the encryption key.")

  public String getEncryptionKey() {
    return encryptionKey;
  }


  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }


   /**
   * Indicates if the EncryptionKey property is set.
   * @return encryptionKeySet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the EncryptionKey property is set.")

  public Boolean getEncryptionKeySet() {
    return encryptionKeySet;
  }




  public ExternalAccountProviderV120Authentication kerberosKeytab(String kerberosKeytab) {
    
    this.kerberosKeytab = kerberosKeytab;
    return this;
  }

   /**
   * The Base64-encoded version of the Kerberos keytab for this service.  A PATCH or PUT operation writes the keytab.  This property is &#x60;null&#x60; in responses.
   * @return kerberosKeytab
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Base64-encoded version of the Kerberos keytab for this service.  A PATCH or PUT operation writes the keytab.  This property is `null` in responses.")

  public String getKerberosKeytab() {
    return kerberosKeytab;
  }


  public void setKerberosKeytab(String kerberosKeytab) {
    this.kerberosKeytab = kerberosKeytab;
  }


  public ExternalAccountProviderV120Authentication oem(Object oem) {
    
    this.oem = oem;
    return this;
  }

   /**
   * Get oem
   * @return oem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOem() {
    return oem;
  }


  public void setOem(Object oem) {
    this.oem = oem;
  }


  public ExternalAccountProviderV120Authentication password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * The password for this service.  A PATCH or PUT request writes the password.  This property is &#x60;null&#x60; in responses.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password for this service.  A PATCH or PUT request writes the password.  This property is `null` in responses.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public ExternalAccountProviderV120Authentication token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * The token for this service.  A PATCH or PUT operation writes the token.  This property is &#x60;null&#x60; in responses.
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The token for this service.  A PATCH or PUT operation writes the token.  This property is `null` in responses.")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public ExternalAccountProviderV120Authentication username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The user name for the service.
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user name for the service.")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalAccountProviderV120Authentication externalAccountProviderV120Authentication = (ExternalAccountProviderV120Authentication) o;
    return Objects.equals(this.authenticationType, externalAccountProviderV120Authentication.authenticationType) &&
        Objects.equals(this.encryptionKey, externalAccountProviderV120Authentication.encryptionKey) &&
        Objects.equals(this.encryptionKeySet, externalAccountProviderV120Authentication.encryptionKeySet) &&
        Objects.equals(this.kerberosKeytab, externalAccountProviderV120Authentication.kerberosKeytab) &&
        Objects.equals(this.oem, externalAccountProviderV120Authentication.oem) &&
        Objects.equals(this.password, externalAccountProviderV120Authentication.password) &&
        Objects.equals(this.token, externalAccountProviderV120Authentication.token) &&
        Objects.equals(this.username, externalAccountProviderV120Authentication.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticationType, encryptionKey, encryptionKeySet, kerberosKeytab, oem, password, token, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalAccountProviderV120Authentication {\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("    encryptionKeySet: ").append(toIndentedString(encryptionKeySet)).append("\n");
    sb.append("    kerberosKeytab: ").append(toIndentedString(kerberosKeytab)).append("\n");
    sb.append("    oem: ").append(toIndentedString(oem)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

