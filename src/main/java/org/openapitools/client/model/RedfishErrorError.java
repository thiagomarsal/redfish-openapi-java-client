/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The properties that describe an error from a Redfish Service.
 */
@ApiModel(description = "The properties that describe an error from a Redfish Service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class RedfishErrorError {
  public static final String SERIALIZED_NAME_AT_MESSAGE_EXTENDED_INFO = "@Message.ExtendedInfo";
  @SerializedName(SERIALIZED_NAME_AT_MESSAGE_EXTENDED_INFO)
  private List<Object> atMessageExtendedInfo = null;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;


  public RedfishErrorError atMessageExtendedInfo(List<Object> atMessageExtendedInfo) {
    
    this.atMessageExtendedInfo = atMessageExtendedInfo;
    return this;
  }

  public RedfishErrorError addAtMessageExtendedInfoItem(Object atMessageExtendedInfoItem) {
    if (this.atMessageExtendedInfo == null) {
      this.atMessageExtendedInfo = new ArrayList<Object>();
    }
    this.atMessageExtendedInfo.add(atMessageExtendedInfoItem);
    return this;
  }

   /**
   * An array of messages describing one or more error messages.
   * @return atMessageExtendedInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of messages describing one or more error messages.")

  public List<Object> getAtMessageExtendedInfo() {
    return atMessageExtendedInfo;
  }


  public void setAtMessageExtendedInfo(List<Object> atMessageExtendedInfo) {
    this.atMessageExtendedInfo = atMessageExtendedInfo;
  }


   /**
   * A string indicating a specific MessageId from a Message Registry.
   * @return code
  **/
  @ApiModelProperty(required = true, value = "A string indicating a specific MessageId from a Message Registry.")

  public String getCode() {
    return code;
  }




   /**
   * A human-readable error message corresponding to the message in a Message Registry.
   * @return message
  **/
  @ApiModelProperty(required = true, value = "A human-readable error message corresponding to the message in a Message Registry.")

  public String getMessage() {
    return message;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedfishErrorError redfishErrorError = (RedfishErrorError) o;
    return Objects.equals(this.atMessageExtendedInfo, redfishErrorError.atMessageExtendedInfo) &&
        Objects.equals(this.code, redfishErrorError.code) &&
        Objects.equals(this.message, redfishErrorError.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atMessageExtendedInfo, code, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedfishErrorError {\n");
    sb.append("    atMessageExtendedInfo: ").append(toIndentedString(atMessageExtendedInfo)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

