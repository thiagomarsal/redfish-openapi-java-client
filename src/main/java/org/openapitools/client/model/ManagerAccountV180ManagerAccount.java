/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * The ManagerAccount schema defines the user accounts that are owned by a manager.  Changes to a manager account might affect the current Redfish service connection if this manager is responsible for the Redfish service.
 */
@ApiModel(description = "The ManagerAccount schema defines the user accounts that are owned by a manager.  Changes to a manager account might affect the current Redfish service connection if this manager is responsible for the Redfish service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class ManagerAccountV180ManagerAccount {
  public static final String SERIALIZED_NAME_AT_ODATA_CONTEXT = "@odata.context";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_CONTEXT)
  private Object atOdataContext = null;

  public static final String SERIALIZED_NAME_AT_ODATA_ETAG = "@odata.etag";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_ETAG)
  private Object atOdataEtag = null;

  public static final String SERIALIZED_NAME_AT_ODATA_ID = "@odata.id";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_ID)
  private Object atOdataId = null;

  public static final String SERIALIZED_NAME_AT_ODATA_TYPE = "@odata.type";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_TYPE)
  private Object atOdataType = null;

  public static final String SERIALIZED_NAME_ACCOUNT_EXPIRATION = "AccountExpiration";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_EXPIRATION)
  private OffsetDateTime accountExpiration;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPES = "AccountTypes";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPES)
  private List<Object> accountTypes = new ArrayList<Object>();

  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private Object actions = null;

  public static final String SERIALIZED_NAME_CERTIFICATES = "Certificates";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES)
  private Object certificates = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_HOST_BOOTSTRAP_ACCOUNT = "HostBootstrapAccount";
  @SerializedName(SERIALIZED_NAME_HOST_BOOTSTRAP_ACCOUNT)
  private Boolean hostBootstrapAccount;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_LINKS = "Links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links = null;

  public static final String SERIALIZED_NAME_LOCKED = "Locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Object name = null;

  public static final String SERIALIZED_NAME_OE_M_ACCOUNT_TYPES = "OEMAccountTypes";
  @SerializedName(SERIALIZED_NAME_OE_M_ACCOUNT_TYPES)
  private List<String> oeMAccountTypes = null;

  public static final String SERIALIZED_NAME_OEM = "Oem";
  @SerializedName(SERIALIZED_NAME_OEM)
  private Object oem = null;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_CHANGE_REQUIRED = "PasswordChangeRequired";
  @SerializedName(SERIALIZED_NAME_PASSWORD_CHANGE_REQUIRED)
  private Boolean passwordChangeRequired;

  public static final String SERIALIZED_NAME_PASSWORD_EXPIRATION = "PasswordExpiration";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXPIRATION)
  private OffsetDateTime passwordExpiration;

  public static final String SERIALIZED_NAME_ROLE_ID = "RoleId";
  @SerializedName(SERIALIZED_NAME_ROLE_ID)
  private String roleId;

  public static final String SERIALIZED_NAME_S_N_M_P = "SNMP";
  @SerializedName(SERIALIZED_NAME_S_N_M_P)
  private Object SNMP = null;

  public static final String SERIALIZED_NAME_STRICT_ACCOUNT_TYPES = "StrictAccountTypes";
  @SerializedName(SERIALIZED_NAME_STRICT_ACCOUNT_TYPES)
  private Boolean strictAccountTypes;

  public static final String SERIALIZED_NAME_USER_NAME = "UserName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;


  public ManagerAccountV180ManagerAccount atOdataContext(Object atOdataContext) {
    
    this.atOdataContext = atOdataContext;
    return this;
  }

   /**
   * Get atOdataContext
   * @return atOdataContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAtOdataContext() {
    return atOdataContext;
  }


  public void setAtOdataContext(Object atOdataContext) {
    this.atOdataContext = atOdataContext;
  }


  public ManagerAccountV180ManagerAccount atOdataEtag(Object atOdataEtag) {
    
    this.atOdataEtag = atOdataEtag;
    return this;
  }

   /**
   * Get atOdataEtag
   * @return atOdataEtag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAtOdataEtag() {
    return atOdataEtag;
  }


  public void setAtOdataEtag(Object atOdataEtag) {
    this.atOdataEtag = atOdataEtag;
  }


  public ManagerAccountV180ManagerAccount atOdataId(Object atOdataId) {
    
    this.atOdataId = atOdataId;
    return this;
  }

   /**
   * Get atOdataId
   * @return atOdataId
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAtOdataId() {
    return atOdataId;
  }


  public void setAtOdataId(Object atOdataId) {
    this.atOdataId = atOdataId;
  }


  public ManagerAccountV180ManagerAccount atOdataType(Object atOdataType) {
    
    this.atOdataType = atOdataType;
    return this;
  }

   /**
   * Get atOdataType
   * @return atOdataType
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAtOdataType() {
    return atOdataType;
  }


  public void setAtOdataType(Object atOdataType) {
    this.atOdataType = atOdataType;
  }


  public ManagerAccountV180ManagerAccount accountExpiration(OffsetDateTime accountExpiration) {
    
    this.accountExpiration = accountExpiration;
    return this;
  }

   /**
   * Indicates the date and time when this account expires.  If &#x60;null&#x60;, the account never expires.
   * @return accountExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the date and time when this account expires.  If `null`, the account never expires.")

  public OffsetDateTime getAccountExpiration() {
    return accountExpiration;
  }


  public void setAccountExpiration(OffsetDateTime accountExpiration) {
    this.accountExpiration = accountExpiration;
  }


  public ManagerAccountV180ManagerAccount accountTypes(List<Object> accountTypes) {
    
    this.accountTypes = accountTypes;
    return this;
  }

  public ManagerAccountV180ManagerAccount addAccountTypesItem(Object accountTypesItem) {
    this.accountTypes.add(accountTypesItem);
    return this;
  }

   /**
   * The account types.
   * @return accountTypes
  **/
  @ApiModelProperty(required = true, value = "The account types.")

  public List<Object> getAccountTypes() {
    return accountTypes;
  }


  public void setAccountTypes(List<Object> accountTypes) {
    this.accountTypes = accountTypes;
  }


  public ManagerAccountV180ManagerAccount actions(Object actions) {
    
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getActions() {
    return actions;
  }


  public void setActions(Object actions) {
    this.actions = actions;
  }


  public ManagerAccountV180ManagerAccount certificates(Object certificates) {
    
    this.certificates = certificates;
    return this;
  }

   /**
   * Get certificates
   * @return certificates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCertificates() {
    return certificates;
  }


  public void setCertificates(Object certificates) {
    this.certificates = certificates;
  }


  public ManagerAccountV180ManagerAccount description(Object description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    this.description = description;
  }


  public ManagerAccountV180ManagerAccount enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * An indication of whether an account is enabled.  An administrator can disable it without deleting the user information.  If &#x60;true&#x60;, the account is enabled and the user can log in.  If &#x60;false&#x60;, the account is disabled and, in the future, the user cannot log in.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether an account is enabled.  An administrator can disable it without deleting the user information.  If `true`, the account is enabled and the user can log in.  If `false`, the account is disabled and, in the future, the user cannot log in.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


   /**
   * An indication of whether this account is a bootstrap account for the host interface.
   * @return hostBootstrapAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether this account is a bootstrap account for the host interface.")

  public Boolean getHostBootstrapAccount() {
    return hostBootstrapAccount;
  }




  public ManagerAccountV180ManagerAccount id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getId() {
    return id;
  }


  public void setId(Object id) {
    this.id = id;
  }


  public ManagerAccountV180ManagerAccount links(Object links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLinks() {
    return links;
  }


  public void setLinks(Object links) {
    this.links = links;
  }


  public ManagerAccountV180ManagerAccount locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * An indication of whether the account service automatically locked the account because the lockout threshold was exceeded.  To manually unlock the account before the lockout duration period, an administrator can change the property to &#x60;false&#x60; to clear the lockout condition.
   * @return locked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether the account service automatically locked the account because the lockout threshold was exceeded.  To manually unlock the account before the lockout duration period, an administrator can change the property to `false` to clear the lockout condition.")

  public Boolean getLocked() {
    return locked;
  }


  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public ManagerAccountV180ManagerAccount name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getName() {
    return name;
  }


  public void setName(Object name) {
    this.name = name;
  }


  public ManagerAccountV180ManagerAccount oeMAccountTypes(List<String> oeMAccountTypes) {
    
    this.oeMAccountTypes = oeMAccountTypes;
    return this;
  }

  public ManagerAccountV180ManagerAccount addOeMAccountTypesItem(String oeMAccountTypesItem) {
    if (this.oeMAccountTypes == null) {
      this.oeMAccountTypes = new ArrayList<String>();
    }
    this.oeMAccountTypes.add(oeMAccountTypesItem);
    return this;
  }

   /**
   * The OEM account types.
   * @return oeMAccountTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OEM account types.")

  public List<String> getOeMAccountTypes() {
    return oeMAccountTypes;
  }


  public void setOeMAccountTypes(List<String> oeMAccountTypes) {
    this.oeMAccountTypes = oeMAccountTypes;
  }


  public ManagerAccountV180ManagerAccount oem(Object oem) {
    
    this.oem = oem;
    return this;
  }

   /**
   * Get oem
   * @return oem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOem() {
    return oem;
  }


  public void setOem(Object oem) {
    this.oem = oem;
  }


  public ManagerAccountV180ManagerAccount password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * The password.  Use this property with a PATCH or PUT to write the password for the account.  This property is &#x60;null&#x60; in responses.
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password.  Use this property with a PATCH or PUT to write the password for the account.  This property is `null` in responses.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public ManagerAccountV180ManagerAccount passwordChangeRequired(Boolean passwordChangeRequired) {
    
    this.passwordChangeRequired = passwordChangeRequired;
    return this;
  }

   /**
   * An indication of whether the service requires that the password for this account be changed before further access to the account is allowed.
   * @return passwordChangeRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether the service requires that the password for this account be changed before further access to the account is allowed.")

  public Boolean getPasswordChangeRequired() {
    return passwordChangeRequired;
  }


  public void setPasswordChangeRequired(Boolean passwordChangeRequired) {
    this.passwordChangeRequired = passwordChangeRequired;
  }


  public ManagerAccountV180ManagerAccount passwordExpiration(OffsetDateTime passwordExpiration) {
    
    this.passwordExpiration = passwordExpiration;
    return this;
  }

   /**
   * Indicates the date and time when this account password expires.  If &#x60;null&#x60;, the account password never expires.
   * @return passwordExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the date and time when this account password expires.  If `null`, the account password never expires.")

  public OffsetDateTime getPasswordExpiration() {
    return passwordExpiration;
  }


  public void setPasswordExpiration(OffsetDateTime passwordExpiration) {
    this.passwordExpiration = passwordExpiration;
  }


  public ManagerAccountV180ManagerAccount roleId(String roleId) {
    
    this.roleId = roleId;
    return this;
  }

   /**
   * The role for this account.
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The role for this account.")

  public String getRoleId() {
    return roleId;
  }


  public void setRoleId(String roleId) {
    this.roleId = roleId;
  }


  public ManagerAccountV180ManagerAccount SNMP(Object SNMP) {
    
    this.SNMP = SNMP;
    return this;
  }

   /**
   * Get SNMP
   * @return SNMP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSNMP() {
    return SNMP;
  }


  public void setSNMP(Object SNMP) {
    this.SNMP = SNMP;
  }


  public ManagerAccountV180ManagerAccount strictAccountTypes(Boolean strictAccountTypes) {
    
    this.strictAccountTypes = strictAccountTypes;
    return this;
  }

   /**
   * Indicates if the service needs to use the account types exactly as specified when the account is created or updated.
   * @return strictAccountTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the service needs to use the account types exactly as specified when the account is created or updated.")

  public Boolean getStrictAccountTypes() {
    return strictAccountTypes;
  }


  public void setStrictAccountTypes(Boolean strictAccountTypes) {
    this.strictAccountTypes = strictAccountTypes;
  }


  public ManagerAccountV180ManagerAccount userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * The user name for the account.
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user name for the account.")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagerAccountV180ManagerAccount managerAccountV180ManagerAccount = (ManagerAccountV180ManagerAccount) o;
    return Objects.equals(this.atOdataContext, managerAccountV180ManagerAccount.atOdataContext) &&
        Objects.equals(this.atOdataEtag, managerAccountV180ManagerAccount.atOdataEtag) &&
        Objects.equals(this.atOdataId, managerAccountV180ManagerAccount.atOdataId) &&
        Objects.equals(this.atOdataType, managerAccountV180ManagerAccount.atOdataType) &&
        Objects.equals(this.accountExpiration, managerAccountV180ManagerAccount.accountExpiration) &&
        Objects.equals(this.accountTypes, managerAccountV180ManagerAccount.accountTypes) &&
        Objects.equals(this.actions, managerAccountV180ManagerAccount.actions) &&
        Objects.equals(this.certificates, managerAccountV180ManagerAccount.certificates) &&
        Objects.equals(this.description, managerAccountV180ManagerAccount.description) &&
        Objects.equals(this.enabled, managerAccountV180ManagerAccount.enabled) &&
        Objects.equals(this.hostBootstrapAccount, managerAccountV180ManagerAccount.hostBootstrapAccount) &&
        Objects.equals(this.id, managerAccountV180ManagerAccount.id) &&
        Objects.equals(this.links, managerAccountV180ManagerAccount.links) &&
        Objects.equals(this.locked, managerAccountV180ManagerAccount.locked) &&
        Objects.equals(this.name, managerAccountV180ManagerAccount.name) &&
        Objects.equals(this.oeMAccountTypes, managerAccountV180ManagerAccount.oeMAccountTypes) &&
        Objects.equals(this.oem, managerAccountV180ManagerAccount.oem) &&
        Objects.equals(this.password, managerAccountV180ManagerAccount.password) &&
        Objects.equals(this.passwordChangeRequired, managerAccountV180ManagerAccount.passwordChangeRequired) &&
        Objects.equals(this.passwordExpiration, managerAccountV180ManagerAccount.passwordExpiration) &&
        Objects.equals(this.roleId, managerAccountV180ManagerAccount.roleId) &&
        Objects.equals(this.SNMP, managerAccountV180ManagerAccount.SNMP) &&
        Objects.equals(this.strictAccountTypes, managerAccountV180ManagerAccount.strictAccountTypes) &&
        Objects.equals(this.userName, managerAccountV180ManagerAccount.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atOdataContext, atOdataEtag, atOdataId, atOdataType, accountExpiration, accountTypes, actions, certificates, description, enabled, hostBootstrapAccount, id, links, locked, name, oeMAccountTypes, oem, password, passwordChangeRequired, passwordExpiration, roleId, SNMP, strictAccountTypes, userName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagerAccountV180ManagerAccount {\n");
    sb.append("    atOdataContext: ").append(toIndentedString(atOdataContext)).append("\n");
    sb.append("    atOdataEtag: ").append(toIndentedString(atOdataEtag)).append("\n");
    sb.append("    atOdataId: ").append(toIndentedString(atOdataId)).append("\n");
    sb.append("    atOdataType: ").append(toIndentedString(atOdataType)).append("\n");
    sb.append("    accountExpiration: ").append(toIndentedString(accountExpiration)).append("\n");
    sb.append("    accountTypes: ").append(toIndentedString(accountTypes)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hostBootstrapAccount: ").append(toIndentedString(hostBootstrapAccount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oeMAccountTypes: ").append(toIndentedString(oeMAccountTypes)).append("\n");
    sb.append("    oem: ").append(toIndentedString(oem)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordChangeRequired: ").append(toIndentedString(passwordChangeRequired)).append("\n");
    sb.append("    passwordExpiration: ").append(toIndentedString(passwordExpiration)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    SNMP: ").append(toIndentedString(SNMP)).append("\n");
    sb.append("    strictAccountTypes: ").append(toIndentedString(strictAccountTypes)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

