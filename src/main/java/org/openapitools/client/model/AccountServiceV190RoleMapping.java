/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The mapping rules that are used to convert the external account providers account information to the local Redfish role.
 */
@ApiModel(description = "The mapping rules that are used to convert the external account providers account information to the local Redfish role.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class AccountServiceV190RoleMapping {
  public static final String SERIALIZED_NAME_LOCAL_ROLE = "LocalRole";
  @SerializedName(SERIALIZED_NAME_LOCAL_ROLE)
  private String localRole;

  public static final String SERIALIZED_NAME_OEM = "Oem";
  @SerializedName(SERIALIZED_NAME_OEM)
  private Object oem = null;

  public static final String SERIALIZED_NAME_REMOTE_GROUP = "RemoteGroup";
  @SerializedName(SERIALIZED_NAME_REMOTE_GROUP)
  private String remoteGroup;

  public static final String SERIALIZED_NAME_REMOTE_USER = "RemoteUser";
  @SerializedName(SERIALIZED_NAME_REMOTE_USER)
  private String remoteUser;


  public AccountServiceV190RoleMapping localRole(String localRole) {
    
    this.localRole = localRole;
    return this;
  }

   /**
   * The name of the local Redfish role to which to map the remote user or group.
   * @return localRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the local Redfish role to which to map the remote user or group.")

  public String getLocalRole() {
    return localRole;
  }


  public void setLocalRole(String localRole) {
    this.localRole = localRole;
  }


  public AccountServiceV190RoleMapping oem(Object oem) {
    
    this.oem = oem;
    return this;
  }

   /**
   * Get oem
   * @return oem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOem() {
    return oem;
  }


  public void setOem(Object oem) {
    this.oem = oem;
  }


  public AccountServiceV190RoleMapping remoteGroup(String remoteGroup) {
    
    this.remoteGroup = remoteGroup;
    return this;
  }

   /**
   * The name of the remote group, or the remote role in the case of a Redfish service, that maps to the local Redfish role to which this entity links.
   * @return remoteGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the remote group, or the remote role in the case of a Redfish service, that maps to the local Redfish role to which this entity links.")

  public String getRemoteGroup() {
    return remoteGroup;
  }


  public void setRemoteGroup(String remoteGroup) {
    this.remoteGroup = remoteGroup;
  }


  public AccountServiceV190RoleMapping remoteUser(String remoteUser) {
    
    this.remoteUser = remoteUser;
    return this;
  }

   /**
   * The name of the remote user that maps to the local Redfish role to which this entity links.
   * @return remoteUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the remote user that maps to the local Redfish role to which this entity links.")

  public String getRemoteUser() {
    return remoteUser;
  }


  public void setRemoteUser(String remoteUser) {
    this.remoteUser = remoteUser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountServiceV190RoleMapping accountServiceV190RoleMapping = (AccountServiceV190RoleMapping) o;
    return Objects.equals(this.localRole, accountServiceV190RoleMapping.localRole) &&
        Objects.equals(this.oem, accountServiceV190RoleMapping.oem) &&
        Objects.equals(this.remoteGroup, accountServiceV190RoleMapping.remoteGroup) &&
        Objects.equals(this.remoteUser, accountServiceV190RoleMapping.remoteUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localRole, oem, remoteGroup, remoteUser);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountServiceV190RoleMapping {\n");
    sb.append("    localRole: ").append(toIndentedString(localRole)).append("\n");
    sb.append("    oem: ").append(toIndentedString(oem)).append("\n");
    sb.append("    remoteGroup: ").append(toIndentedString(remoteGroup)).append("\n");
    sb.append("    remoteUser: ").append(toIndentedString(remoteUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

