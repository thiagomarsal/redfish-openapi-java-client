/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * AssemblyV130AssemblyData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class AssemblyV130AssemblyData {
  public static final String SERIALIZED_NAME_AT_ODATA_ID = "@odata.id";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_ID)
  private Object atOdataId = null;

  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private Object actions = null;

  public static final String SERIALIZED_NAME_BINARY_DATA_U_R_I = "BinaryDataURI";
  @SerializedName(SERIALIZED_NAME_BINARY_DATA_U_R_I)
  private String binaryDataURI;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENGINEERING_CHANGE_LEVEL = "EngineeringChangeLevel";
  @SerializedName(SERIALIZED_NAME_ENGINEERING_CHANGE_LEVEL)
  private String engineeringChangeLevel;

  public static final String SERIALIZED_NAME_LOCATION = "Location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Object location = null;

  public static final String SERIALIZED_NAME_LOCATION_INDICATOR_ACTIVE = "LocationIndicatorActive";
  @SerializedName(SERIALIZED_NAME_LOCATION_INDICATOR_ACTIVE)
  private Boolean locationIndicatorActive;

  public static final String SERIALIZED_NAME_MEMBER_ID = "MemberId";
  @SerializedName(SERIALIZED_NAME_MEMBER_ID)
  private String memberId;

  public static final String SERIALIZED_NAME_MODEL = "Model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OEM = "Oem";
  @SerializedName(SERIALIZED_NAME_OEM)
  private Object oem = null;

  public static final String SERIALIZED_NAME_PART_NUMBER = "PartNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_PHYSICAL_CONTEXT = "PhysicalContext";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_CONTEXT)
  private Object physicalContext = null;

  public static final String SERIALIZED_NAME_PRODUCER = "Producer";
  @SerializedName(SERIALIZED_NAME_PRODUCER)
  private String producer;

  public static final String SERIALIZED_NAME_PRODUCTION_DATE = "ProductionDate";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_DATE)
  private OffsetDateTime productionDate;

  public static final String SERIALIZED_NAME_S_K_U = "SKU";
  @SerializedName(SERIALIZED_NAME_S_K_U)
  private String SKU;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "SerialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_SPARE_PART_NUMBER = "SparePartNumber";
  @SerializedName(SERIALIZED_NAME_SPARE_PART_NUMBER)
  private String sparePartNumber;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Object status = null;

  public static final String SERIALIZED_NAME_VENDOR = "Vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;


  public AssemblyV130AssemblyData atOdataId(Object atOdataId) {
    
    this.atOdataId = atOdataId;
    return this;
  }

   /**
   * Get atOdataId
   * @return atOdataId
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAtOdataId() {
    return atOdataId;
  }


  public void setAtOdataId(Object atOdataId) {
    this.atOdataId = atOdataId;
  }


  public AssemblyV130AssemblyData actions(Object actions) {
    
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getActions() {
    return actions;
  }


  public void setActions(Object actions) {
    this.actions = actions;
  }


   /**
   * The URI at which to access an image of the assembly information.
   * @return binaryDataURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URI at which to access an image of the assembly information.")

  public String getBinaryDataURI() {
    return binaryDataURI;
  }




   /**
   * The description of the assembly.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the assembly.")

  public String getDescription() {
    return description;
  }




   /**
   * The engineering change level of the assembly.
   * @return engineeringChangeLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The engineering change level of the assembly.")

  public String getEngineeringChangeLevel() {
    return engineeringChangeLevel;
  }




  public AssemblyV130AssemblyData location(Object location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLocation() {
    return location;
  }


  public void setLocation(Object location) {
    this.location = location;
  }


  public AssemblyV130AssemblyData locationIndicatorActive(Boolean locationIndicatorActive) {
    
    this.locationIndicatorActive = locationIndicatorActive;
    return this;
  }

   /**
   * An indicator allowing an operator to physically locate this resource.
   * @return locationIndicatorActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indicator allowing an operator to physically locate this resource.")

  public Boolean getLocationIndicatorActive() {
    return locationIndicatorActive;
  }


  public void setLocationIndicatorActive(Boolean locationIndicatorActive) {
    this.locationIndicatorActive = locationIndicatorActive;
  }


   /**
   * The identifier for the member within the collection.
   * @return memberId
  **/
  @ApiModelProperty(required = true, value = "The identifier for the member within the collection.")

  public String getMemberId() {
    return memberId;
  }




   /**
   * The model number of the assembly.
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The model number of the assembly.")

  public String getModel() {
    return model;
  }




   /**
   * The name of the assembly.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the assembly.")

  public String getName() {
    return name;
  }




  public AssemblyV130AssemblyData oem(Object oem) {
    
    this.oem = oem;
    return this;
  }

   /**
   * Get oem
   * @return oem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOem() {
    return oem;
  }


  public void setOem(Object oem) {
    this.oem = oem;
  }


   /**
   * The part number of the assembly.
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The part number of the assembly.")

  public String getPartNumber() {
    return partNumber;
  }




  public AssemblyV130AssemblyData physicalContext(Object physicalContext) {
    
    this.physicalContext = physicalContext;
    return this;
  }

   /**
   * Get physicalContext
   * @return physicalContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPhysicalContext() {
    return physicalContext;
  }


  public void setPhysicalContext(Object physicalContext) {
    this.physicalContext = physicalContext;
  }


   /**
   * The producer or manufacturer of the assembly.
   * @return producer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The producer or manufacturer of the assembly.")

  public String getProducer() {
    return producer;
  }




   /**
   * The production date of the assembly.
   * @return productionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The production date of the assembly.")

  public OffsetDateTime getProductionDate() {
    return productionDate;
  }




   /**
   * The SKU of the assembly.
   * @return SKU
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The SKU of the assembly.")

  public String getSKU() {
    return SKU;
  }




   /**
   * The serial number of the assembly.
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The serial number of the assembly.")

  public String getSerialNumber() {
    return serialNumber;
  }




   /**
   * The spare part number of the assembly.
   * @return sparePartNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The spare part number of the assembly.")

  public String getSparePartNumber() {
    return sparePartNumber;
  }




  public AssemblyV130AssemblyData status(Object status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStatus() {
    return status;
  }


  public void setStatus(Object status) {
    this.status = status;
  }


   /**
   * The vendor of the assembly.
   * @return vendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The vendor of the assembly.")

  public String getVendor() {
    return vendor;
  }




   /**
   * The hardware version of the assembly.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hardware version of the assembly.")

  public String getVersion() {
    return version;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssemblyV130AssemblyData assemblyV130AssemblyData = (AssemblyV130AssemblyData) o;
    return Objects.equals(this.atOdataId, assemblyV130AssemblyData.atOdataId) &&
        Objects.equals(this.actions, assemblyV130AssemblyData.actions) &&
        Objects.equals(this.binaryDataURI, assemblyV130AssemblyData.binaryDataURI) &&
        Objects.equals(this.description, assemblyV130AssemblyData.description) &&
        Objects.equals(this.engineeringChangeLevel, assemblyV130AssemblyData.engineeringChangeLevel) &&
        Objects.equals(this.location, assemblyV130AssemblyData.location) &&
        Objects.equals(this.locationIndicatorActive, assemblyV130AssemblyData.locationIndicatorActive) &&
        Objects.equals(this.memberId, assemblyV130AssemblyData.memberId) &&
        Objects.equals(this.model, assemblyV130AssemblyData.model) &&
        Objects.equals(this.name, assemblyV130AssemblyData.name) &&
        Objects.equals(this.oem, assemblyV130AssemblyData.oem) &&
        Objects.equals(this.partNumber, assemblyV130AssemblyData.partNumber) &&
        Objects.equals(this.physicalContext, assemblyV130AssemblyData.physicalContext) &&
        Objects.equals(this.producer, assemblyV130AssemblyData.producer) &&
        Objects.equals(this.productionDate, assemblyV130AssemblyData.productionDate) &&
        Objects.equals(this.SKU, assemblyV130AssemblyData.SKU) &&
        Objects.equals(this.serialNumber, assemblyV130AssemblyData.serialNumber) &&
        Objects.equals(this.sparePartNumber, assemblyV130AssemblyData.sparePartNumber) &&
        Objects.equals(this.status, assemblyV130AssemblyData.status) &&
        Objects.equals(this.vendor, assemblyV130AssemblyData.vendor) &&
        Objects.equals(this.version, assemblyV130AssemblyData.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atOdataId, actions, binaryDataURI, description, engineeringChangeLevel, location, locationIndicatorActive, memberId, model, name, oem, partNumber, physicalContext, producer, productionDate, SKU, serialNumber, sparePartNumber, status, vendor, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssemblyV130AssemblyData {\n");
    sb.append("    atOdataId: ").append(toIndentedString(atOdataId)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    binaryDataURI: ").append(toIndentedString(binaryDataURI)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    engineeringChangeLevel: ").append(toIndentedString(engineeringChangeLevel)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationIndicatorActive: ").append(toIndentedString(locationIndicatorActive)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oem: ").append(toIndentedString(oem)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    physicalContext: ").append(toIndentedString(physicalContext)).append("\n");
    sb.append("    producer: ").append(toIndentedString(producer)).append("\n");
    sb.append("    productionDate: ").append(toIndentedString(productionDate)).append("\n");
    sb.append("    SKU: ").append(toIndentedString(SKU)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    sparePartNumber: ").append(toIndentedString(sparePartNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

