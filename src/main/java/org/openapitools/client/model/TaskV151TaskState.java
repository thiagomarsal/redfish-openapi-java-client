/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Task_v1_5_1_TaskState
 */
@JsonAdapter(TaskV151TaskState.Adapter.class)
public enum TaskV151TaskState {
  
  NEW("New"),
  
  STARTING("Starting"),
  
  RUNNING("Running"),
  
  SUSPENDED("Suspended"),
  
  INTERRUPTED("Interrupted"),
  
  PENDING("Pending"),
  
  STOPPING("Stopping"),
  
  COMPLETED("Completed"),
  
  KILLED("Killed"),
  
  EXCEPTION("Exception"),
  
  SERVICE("Service"),
  
  CANCELLING("Cancelling"),
  
  CANCELLED("Cancelled");

  private String value;

  TaskV151TaskState(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TaskV151TaskState fromValue(String value) {
    for (TaskV151TaskState b : TaskV151TaskState.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TaskV151TaskState> {
    @Override
    public void write(final JsonWriter jsonWriter, final TaskV151TaskState enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TaskV151TaskState read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TaskV151TaskState.fromValue(value);
    }
  }
}

