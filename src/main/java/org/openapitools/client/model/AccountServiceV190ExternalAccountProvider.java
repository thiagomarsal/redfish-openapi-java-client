/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AccountServiceV190RoleMapping;

/**
 * The external account provider services that can provide accounts for this manager to use for authentication.
 */
@ApiModel(description = "The external account provider services that can provide accounts for this manager to use for authentication.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class AccountServiceV190ExternalAccountProvider {
  public static final String SERIALIZED_NAME_ACCOUNT_PROVIDER_TYPE = "AccountProviderType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PROVIDER_TYPE)
  private Object accountProviderType = null;

  public static final String SERIALIZED_NAME_AUTHENTICATION = "Authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private Object authentication = null;

  public static final String SERIALIZED_NAME_CERTIFICATES = "Certificates";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES)
  private Object certificates = null;

  public static final String SERIALIZED_NAME_LD_A_P_SERVICE = "LDAPService";
  @SerializedName(SERIALIZED_NAME_LD_A_P_SERVICE)
  private Object ldAPService = null;

  public static final String SERIALIZED_NAME_PASSWORD_SET = "PasswordSet";
  @SerializedName(SERIALIZED_NAME_PASSWORD_SET)
  private Boolean passwordSet;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Long priority;

  public static final String SERIALIZED_NAME_REMOTE_ROLE_MAPPING = "RemoteRoleMapping";
  @SerializedName(SERIALIZED_NAME_REMOTE_ROLE_MAPPING)
  private List<AccountServiceV190RoleMapping> remoteRoleMapping = null;

  public static final String SERIALIZED_NAME_SERVICE_ADDRESSES = "ServiceAddresses";
  @SerializedName(SERIALIZED_NAME_SERVICE_ADDRESSES)
  private List<String> serviceAddresses = null;

  public static final String SERIALIZED_NAME_SERVICE_ENABLED = "ServiceEnabled";
  @SerializedName(SERIALIZED_NAME_SERVICE_ENABLED)
  private Boolean serviceEnabled;

  public static final String SERIALIZED_NAME_TA_C_A_C_SPLUS_SERVICE = "TACACSplusService";
  @SerializedName(SERIALIZED_NAME_TA_C_A_C_SPLUS_SERVICE)
  private Object taCACSplusService = null;


  public AccountServiceV190ExternalAccountProvider accountProviderType(Object accountProviderType) {
    
    this.accountProviderType = accountProviderType;
    return this;
  }

   /**
   * Get accountProviderType
   * @return accountProviderType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAccountProviderType() {
    return accountProviderType;
  }


  public void setAccountProviderType(Object accountProviderType) {
    this.accountProviderType = accountProviderType;
  }


  public AccountServiceV190ExternalAccountProvider authentication(Object authentication) {
    
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAuthentication() {
    return authentication;
  }


  public void setAuthentication(Object authentication) {
    this.authentication = authentication;
  }


  public AccountServiceV190ExternalAccountProvider certificates(Object certificates) {
    
    this.certificates = certificates;
    return this;
  }

   /**
   * Get certificates
   * @return certificates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCertificates() {
    return certificates;
  }


  public void setCertificates(Object certificates) {
    this.certificates = certificates;
  }


  public AccountServiceV190ExternalAccountProvider ldAPService(Object ldAPService) {
    
    this.ldAPService = ldAPService;
    return this;
  }

   /**
   * Get ldAPService
   * @return ldAPService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLdAPService() {
    return ldAPService;
  }


  public void setLdAPService(Object ldAPService) {
    this.ldAPService = ldAPService;
  }


   /**
   * Indicates if the Password property is set.
   * @return passwordSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the Password property is set.")

  public Boolean getPasswordSet() {
    return passwordSet;
  }




  public AccountServiceV190ExternalAccountProvider priority(Long priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * The authentication priority for the external account provider.
   * minimum: 0
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The authentication priority for the external account provider.")

  public Long getPriority() {
    return priority;
  }


  public void setPriority(Long priority) {
    this.priority = priority;
  }


  public AccountServiceV190ExternalAccountProvider remoteRoleMapping(List<AccountServiceV190RoleMapping> remoteRoleMapping) {
    
    this.remoteRoleMapping = remoteRoleMapping;
    return this;
  }

  public AccountServiceV190ExternalAccountProvider addRemoteRoleMappingItem(AccountServiceV190RoleMapping remoteRoleMappingItem) {
    if (this.remoteRoleMapping == null) {
      this.remoteRoleMapping = new ArrayList<AccountServiceV190RoleMapping>();
    }
    this.remoteRoleMapping.add(remoteRoleMappingItem);
    return this;
  }

   /**
   * The mapping rules to convert the external account providers account information to the local Redfish role.
   * @return remoteRoleMapping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The mapping rules to convert the external account providers account information to the local Redfish role.")

  public List<AccountServiceV190RoleMapping> getRemoteRoleMapping() {
    return remoteRoleMapping;
  }


  public void setRemoteRoleMapping(List<AccountServiceV190RoleMapping> remoteRoleMapping) {
    this.remoteRoleMapping = remoteRoleMapping;
  }


  public AccountServiceV190ExternalAccountProvider serviceAddresses(List<String> serviceAddresses) {
    
    this.serviceAddresses = serviceAddresses;
    return this;
  }

  public AccountServiceV190ExternalAccountProvider addServiceAddressesItem(String serviceAddressesItem) {
    if (this.serviceAddresses == null) {
      this.serviceAddresses = new ArrayList<String>();
    }
    this.serviceAddresses.add(serviceAddressesItem);
    return this;
  }

   /**
   * The addresses of the user account providers to which this external account provider links.  The format of this field depends on the type of external account provider.
   * @return serviceAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The addresses of the user account providers to which this external account provider links.  The format of this field depends on the type of external account provider.")

  public List<String> getServiceAddresses() {
    return serviceAddresses;
  }


  public void setServiceAddresses(List<String> serviceAddresses) {
    this.serviceAddresses = serviceAddresses;
  }


  public AccountServiceV190ExternalAccountProvider serviceEnabled(Boolean serviceEnabled) {
    
    this.serviceEnabled = serviceEnabled;
    return this;
  }

   /**
   * An indication of whether this service is enabled.
   * @return serviceEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether this service is enabled.")

  public Boolean getServiceEnabled() {
    return serviceEnabled;
  }


  public void setServiceEnabled(Boolean serviceEnabled) {
    this.serviceEnabled = serviceEnabled;
  }


  public AccountServiceV190ExternalAccountProvider taCACSplusService(Object taCACSplusService) {
    
    this.taCACSplusService = taCACSplusService;
    return this;
  }

   /**
   * Get taCACSplusService
   * @return taCACSplusService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTaCACSplusService() {
    return taCACSplusService;
  }


  public void setTaCACSplusService(Object taCACSplusService) {
    this.taCACSplusService = taCACSplusService;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountServiceV190ExternalAccountProvider accountServiceV190ExternalAccountProvider = (AccountServiceV190ExternalAccountProvider) o;
    return Objects.equals(this.accountProviderType, accountServiceV190ExternalAccountProvider.accountProviderType) &&
        Objects.equals(this.authentication, accountServiceV190ExternalAccountProvider.authentication) &&
        Objects.equals(this.certificates, accountServiceV190ExternalAccountProvider.certificates) &&
        Objects.equals(this.ldAPService, accountServiceV190ExternalAccountProvider.ldAPService) &&
        Objects.equals(this.passwordSet, accountServiceV190ExternalAccountProvider.passwordSet) &&
        Objects.equals(this.priority, accountServiceV190ExternalAccountProvider.priority) &&
        Objects.equals(this.remoteRoleMapping, accountServiceV190ExternalAccountProvider.remoteRoleMapping) &&
        Objects.equals(this.serviceAddresses, accountServiceV190ExternalAccountProvider.serviceAddresses) &&
        Objects.equals(this.serviceEnabled, accountServiceV190ExternalAccountProvider.serviceEnabled) &&
        Objects.equals(this.taCACSplusService, accountServiceV190ExternalAccountProvider.taCACSplusService);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountProviderType, authentication, certificates, ldAPService, passwordSet, priority, remoteRoleMapping, serviceAddresses, serviceEnabled, taCACSplusService);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountServiceV190ExternalAccountProvider {\n");
    sb.append("    accountProviderType: ").append(toIndentedString(accountProviderType)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("    ldAPService: ").append(toIndentedString(ldAPService)).append("\n");
    sb.append("    passwordSet: ").append(toIndentedString(passwordSet)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    remoteRoleMapping: ").append(toIndentedString(remoteRoleMapping)).append("\n");
    sb.append("    serviceAddresses: ").append(toIndentedString(serviceAddresses)).append("\n");
    sb.append("    serviceEnabled: ").append(toIndentedString(serviceEnabled)).append("\n");
    sb.append("    taCACSplusService: ").append(toIndentedString(taCACSplusService)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

