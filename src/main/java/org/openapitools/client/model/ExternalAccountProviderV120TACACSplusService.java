/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol;

/**
 * Various settings to parse a TACACS+ service.
 */
@ApiModel(description = "Various settings to parse a TACACS+ service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class ExternalAccountProviderV120TACACSplusService {
  public static final String SERIALIZED_NAME_PASSWORD_EXCHANGE_PROTOCOLS = "PasswordExchangeProtocols";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXCHANGE_PROTOCOLS)
  private List<ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol> passwordExchangeProtocols = null;

  public static final String SERIALIZED_NAME_PRIVILEGE_LEVEL_ARGUMENT = "PrivilegeLevelArgument";
  @SerializedName(SERIALIZED_NAME_PRIVILEGE_LEVEL_ARGUMENT)
  private String privilegeLevelArgument;


  public ExternalAccountProviderV120TACACSplusService passwordExchangeProtocols(List<ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol> passwordExchangeProtocols) {
    
    this.passwordExchangeProtocols = passwordExchangeProtocols;
    return this;
  }

  public ExternalAccountProviderV120TACACSplusService addPasswordExchangeProtocolsItem(ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol passwordExchangeProtocolsItem) {
    if (this.passwordExchangeProtocols == null) {
      this.passwordExchangeProtocols = new ArrayList<ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol>();
    }
    this.passwordExchangeProtocols.add(passwordExchangeProtocolsItem);
    return this;
  }

   /**
   * Indicates the allowed TACACS+ password exchange protocols.
   * @return passwordExchangeProtocols
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the allowed TACACS+ password exchange protocols.")

  public List<ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol> getPasswordExchangeProtocols() {
    return passwordExchangeProtocols;
  }


  public void setPasswordExchangeProtocols(List<ExternalAccountProviderV120TACACSplusPasswordExchangeProtocol> passwordExchangeProtocols) {
    this.passwordExchangeProtocols = passwordExchangeProtocols;
  }


  public ExternalAccountProviderV120TACACSplusService privilegeLevelArgument(String privilegeLevelArgument) {
    
    this.privilegeLevelArgument = privilegeLevelArgument;
    return this;
  }

   /**
   * Indicates the name of the TACACS+ argument name in an authorization request.
   * @return privilegeLevelArgument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the name of the TACACS+ argument name in an authorization request.")

  public String getPrivilegeLevelArgument() {
    return privilegeLevelArgument;
  }


  public void setPrivilegeLevelArgument(String privilegeLevelArgument) {
    this.privilegeLevelArgument = privilegeLevelArgument;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalAccountProviderV120TACACSplusService externalAccountProviderV120TACACSplusService = (ExternalAccountProviderV120TACACSplusService) o;
    return Objects.equals(this.passwordExchangeProtocols, externalAccountProviderV120TACACSplusService.passwordExchangeProtocols) &&
        Objects.equals(this.privilegeLevelArgument, externalAccountProviderV120TACACSplusService.privilegeLevelArgument);
  }

  @Override
  public int hashCode() {
    return Objects.hash(passwordExchangeProtocols, privilegeLevelArgument);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalAccountProviderV120TACACSplusService {\n");
    sb.append("    passwordExchangeProtocols: ").append(toIndentedString(passwordExchangeProtocols)).append("\n");
    sb.append("    privilegeLevelArgument: ").append(toIndentedString(privilegeLevelArgument)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

