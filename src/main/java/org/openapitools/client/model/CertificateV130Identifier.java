/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The identifier information about a certificate.
 */
@ApiModel(description = "The identifier information about a certificate.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class CertificateV130Identifier {
  public static final String SERIALIZED_NAME_CITY = "City";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMMON_NAME = "CommonName";
  @SerializedName(SERIALIZED_NAME_COMMON_NAME)
  private String commonName;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_ORGANIZATION = "Organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private String organization;

  public static final String SERIALIZED_NAME_ORGANIZATIONAL_UNIT = "OrganizationalUnit";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONAL_UNIT)
  private String organizationalUnit;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;


   /**
   * The city or locality of the organization of the entity.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The city or locality of the organization of the entity.")

  public String getCity() {
    return city;
  }




   /**
   * The fully qualified domain name of the entity.
   * @return commonName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fully qualified domain name of the entity.")

  public String getCommonName() {
    return commonName;
  }




   /**
   * The country of the organization of the entity.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country of the organization of the entity.")

  public String getCountry() {
    return country;
  }




   /**
   * The email address of the contact within the organization of the entity.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email address of the contact within the organization of the entity.")

  public String getEmail() {
    return email;
  }




   /**
   * The name of the organization of the entity.
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the organization of the entity.")

  public String getOrganization() {
    return organization;
  }




   /**
   * The name of the unit or division of the organization of the entity.
   * @return organizationalUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the unit or division of the organization of the entity.")

  public String getOrganizationalUnit() {
    return organizationalUnit;
  }




   /**
   * The state, province, or region of the organization of the entity.
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state, province, or region of the organization of the entity.")

  public String getState() {
    return state;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateV130Identifier certificateV130Identifier = (CertificateV130Identifier) o;
    return Objects.equals(this.city, certificateV130Identifier.city) &&
        Objects.equals(this.commonName, certificateV130Identifier.commonName) &&
        Objects.equals(this.country, certificateV130Identifier.country) &&
        Objects.equals(this.email, certificateV130Identifier.email) &&
        Objects.equals(this.organization, certificateV130Identifier.organization) &&
        Objects.equals(this.organizationalUnit, certificateV130Identifier.organizationalUnit) &&
        Objects.equals(this.state, certificateV130Identifier.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, commonName, country, email, organization, organizationalUnit, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateV130Identifier {\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    organizationalUnit: ").append(toIndentedString(organizationalUnit)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

