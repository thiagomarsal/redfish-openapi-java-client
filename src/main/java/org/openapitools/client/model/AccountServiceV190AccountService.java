/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The AccountService schema defines an account service.  The properties are common to, and enable management of, all user accounts.  The properties include the password requirements and control features, such as account lockout.  The schema also contains links to the manager accounts and roles.
 */
@ApiModel(description = "The AccountService schema defines an account service.  The properties are common to, and enable management of, all user accounts.  The properties include the password requirements and control features, such as account lockout.  The schema also contains links to the manager accounts and roles.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class AccountServiceV190AccountService {
  public static final String SERIALIZED_NAME_AT_ODATA_CONTEXT = "@odata.context";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_CONTEXT)
  private Object atOdataContext = null;

  public static final String SERIALIZED_NAME_AT_ODATA_ETAG = "@odata.etag";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_ETAG)
  private Object atOdataEtag = null;

  public static final String SERIALIZED_NAME_AT_ODATA_ID = "@odata.id";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_ID)
  private Object atOdataId = null;

  public static final String SERIALIZED_NAME_AT_ODATA_TYPE = "@odata.type";
  @SerializedName(SERIALIZED_NAME_AT_ODATA_TYPE)
  private Object atOdataType = null;

  public static final String SERIALIZED_NAME_ACCOUNT_LOCKOUT_COUNTER_RESET_AFTER = "AccountLockoutCounterResetAfter";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LOCKOUT_COUNTER_RESET_AFTER)
  private Long accountLockoutCounterResetAfter;

  public static final String SERIALIZED_NAME_ACCOUNT_LOCKOUT_COUNTER_RESET_ENABLED = "AccountLockoutCounterResetEnabled";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LOCKOUT_COUNTER_RESET_ENABLED)
  private Boolean accountLockoutCounterResetEnabled;

  public static final String SERIALIZED_NAME_ACCOUNT_LOCKOUT_DURATION = "AccountLockoutDuration";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LOCKOUT_DURATION)
  private Long accountLockoutDuration;

  public static final String SERIALIZED_NAME_ACCOUNT_LOCKOUT_THRESHOLD = "AccountLockoutThreshold";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LOCKOUT_THRESHOLD)
  private Long accountLockoutThreshold;

  public static final String SERIALIZED_NAME_ACCOUNTS = "Accounts";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS)
  private Object accounts = null;

  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private Object actions = null;

  public static final String SERIALIZED_NAME_ACTIVE_DIRECTORY = "ActiveDirectory";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DIRECTORY)
  private Object activeDirectory = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_EXTERNAL_ACCOUNT_PROVIDERS = "AdditionalExternalAccountProviders";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_EXTERNAL_ACCOUNT_PROVIDERS)
  private Object additionalExternalAccountProviders = null;

  public static final String SERIALIZED_NAME_AUTH_FAILURE_LOGGING_THRESHOLD = "AuthFailureLoggingThreshold";
  @SerializedName(SERIALIZED_NAME_AUTH_FAILURE_LOGGING_THRESHOLD)
  private Long authFailureLoggingThreshold;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_L_D_A_P = "LDAP";
  @SerializedName(SERIALIZED_NAME_L_D_A_P)
  private Object LDAP = null;

  public static final String SERIALIZED_NAME_LOCAL_ACCOUNT_AUTH = "LocalAccountAuth";
  @SerializedName(SERIALIZED_NAME_LOCAL_ACCOUNT_AUTH)
  private Object localAccountAuth = null;

  public static final String SERIALIZED_NAME_MAX_PASSWORD_LENGTH = "MaxPasswordLength";
  @SerializedName(SERIALIZED_NAME_MAX_PASSWORD_LENGTH)
  private Long maxPasswordLength;

  public static final String SERIALIZED_NAME_MIN_PASSWORD_LENGTH = "MinPasswordLength";
  @SerializedName(SERIALIZED_NAME_MIN_PASSWORD_LENGTH)
  private Long minPasswordLength;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Object name = null;

  public static final String SERIALIZED_NAME_OEM = "Oem";
  @SerializedName(SERIALIZED_NAME_OEM)
  private Object oem = null;

  public static final String SERIALIZED_NAME_PASSWORD_EXPIRATION_DAYS = "PasswordExpirationDays";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXPIRATION_DAYS)
  private Long passwordExpirationDays;

  public static final String SERIALIZED_NAME_PRIVILEGE_MAP = "PrivilegeMap";
  @SerializedName(SERIALIZED_NAME_PRIVILEGE_MAP)
  private Object privilegeMap = null;

  public static final String SERIALIZED_NAME_RESTRICTED_OEM_PRIVILEGES = "RestrictedOemPrivileges";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_OEM_PRIVILEGES)
  private List<String> restrictedOemPrivileges = null;

  public static final String SERIALIZED_NAME_RESTRICTED_PRIVILEGES = "RestrictedPrivileges";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_PRIVILEGES)
  private List<Object> restrictedPrivileges = null;

  public static final String SERIALIZED_NAME_ROLES = "Roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private Object roles = null;

  public static final String SERIALIZED_NAME_SERVICE_ENABLED = "ServiceEnabled";
  @SerializedName(SERIALIZED_NAME_SERVICE_ENABLED)
  private Boolean serviceEnabled;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Object status = null;

  public static final String SERIALIZED_NAME_SUPPORTED_ACCOUNT_TYPES = "SupportedAccountTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_ACCOUNT_TYPES)
  private List<Object> supportedAccountTypes = null;

  public static final String SERIALIZED_NAME_SUPPORTED_O_E_M_ACCOUNT_TYPES = "SupportedOEMAccountTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_O_E_M_ACCOUNT_TYPES)
  private List<String> supportedOEMAccountTypes = null;

  public static final String SERIALIZED_NAME_TA_C_A_C_SPLUS = "TACACSplus";
  @SerializedName(SERIALIZED_NAME_TA_C_A_C_SPLUS)
  private Object taCACSplus = null;


  public AccountServiceV190AccountService atOdataContext(Object atOdataContext) {
    
    this.atOdataContext = atOdataContext;
    return this;
  }

   /**
   * Get atOdataContext
   * @return atOdataContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAtOdataContext() {
    return atOdataContext;
  }


  public void setAtOdataContext(Object atOdataContext) {
    this.atOdataContext = atOdataContext;
  }


  public AccountServiceV190AccountService atOdataEtag(Object atOdataEtag) {
    
    this.atOdataEtag = atOdataEtag;
    return this;
  }

   /**
   * Get atOdataEtag
   * @return atOdataEtag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAtOdataEtag() {
    return atOdataEtag;
  }


  public void setAtOdataEtag(Object atOdataEtag) {
    this.atOdataEtag = atOdataEtag;
  }


  public AccountServiceV190AccountService atOdataId(Object atOdataId) {
    
    this.atOdataId = atOdataId;
    return this;
  }

   /**
   * Get atOdataId
   * @return atOdataId
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAtOdataId() {
    return atOdataId;
  }


  public void setAtOdataId(Object atOdataId) {
    this.atOdataId = atOdataId;
  }


  public AccountServiceV190AccountService atOdataType(Object atOdataType) {
    
    this.atOdataType = atOdataType;
    return this;
  }

   /**
   * Get atOdataType
   * @return atOdataType
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAtOdataType() {
    return atOdataType;
  }


  public void setAtOdataType(Object atOdataType) {
    this.atOdataType = atOdataType;
  }


  public AccountServiceV190AccountService accountLockoutCounterResetAfter(Long accountLockoutCounterResetAfter) {
    
    this.accountLockoutCounterResetAfter = accountLockoutCounterResetAfter;
    return this;
  }

   /**
   * The period of time, in seconds, between the last failed login attempt and the reset of the lockout threshold counter.  This value must be less than or equal to the AccountLockoutDuration value.  A reset sets the counter to &#x60;0&#x60;.
   * minimum: 0
   * @return accountLockoutCounterResetAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The period of time, in seconds, between the last failed login attempt and the reset of the lockout threshold counter.  This value must be less than or equal to the AccountLockoutDuration value.  A reset sets the counter to `0`.")

  public Long getAccountLockoutCounterResetAfter() {
    return accountLockoutCounterResetAfter;
  }


  public void setAccountLockoutCounterResetAfter(Long accountLockoutCounterResetAfter) {
    this.accountLockoutCounterResetAfter = accountLockoutCounterResetAfter;
  }


  public AccountServiceV190AccountService accountLockoutCounterResetEnabled(Boolean accountLockoutCounterResetEnabled) {
    
    this.accountLockoutCounterResetEnabled = accountLockoutCounterResetEnabled;
    return this;
  }

   /**
   * An indication of whether the threshold counter is reset after AccountLockoutCounterResetAfter expires.  If &#x60;true&#x60;, it is reset.  If &#x60;false&#x60;, only a successful login resets the threshold counter and if the user reaches the AccountLockoutThreshold limit, the account will be locked out indefinitely and only an administrator-issued reset clears the threshold counter.  If this property is absent, the default is &#x60;true&#x60;.
   * @return accountLockoutCounterResetEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether the threshold counter is reset after AccountLockoutCounterResetAfter expires.  If `true`, it is reset.  If `false`, only a successful login resets the threshold counter and if the user reaches the AccountLockoutThreshold limit, the account will be locked out indefinitely and only an administrator-issued reset clears the threshold counter.  If this property is absent, the default is `true`.")

  public Boolean getAccountLockoutCounterResetEnabled() {
    return accountLockoutCounterResetEnabled;
  }


  public void setAccountLockoutCounterResetEnabled(Boolean accountLockoutCounterResetEnabled) {
    this.accountLockoutCounterResetEnabled = accountLockoutCounterResetEnabled;
  }


  public AccountServiceV190AccountService accountLockoutDuration(Long accountLockoutDuration) {
    
    this.accountLockoutDuration = accountLockoutDuration;
    return this;
  }

   /**
   * The period of time, in seconds, that an account is locked after the number of failed login attempts reaches the account lockout threshold, within the period between the last failed login attempt and the reset of the lockout threshold counter.  If this value is &#x60;0&#x60;, no lockout will occur.  If the AccountLockoutCounterResetEnabled value is &#x60;false&#x60;, this property is ignored.
   * minimum: 0
   * @return accountLockoutDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The period of time, in seconds, that an account is locked after the number of failed login attempts reaches the account lockout threshold, within the period between the last failed login attempt and the reset of the lockout threshold counter.  If this value is `0`, no lockout will occur.  If the AccountLockoutCounterResetEnabled value is `false`, this property is ignored.")

  public Long getAccountLockoutDuration() {
    return accountLockoutDuration;
  }


  public void setAccountLockoutDuration(Long accountLockoutDuration) {
    this.accountLockoutDuration = accountLockoutDuration;
  }


  public AccountServiceV190AccountService accountLockoutThreshold(Long accountLockoutThreshold) {
    
    this.accountLockoutThreshold = accountLockoutThreshold;
    return this;
  }

   /**
   * The number of allowed failed login attempts before a user account is locked for a specified duration.  If &#x60;0&#x60;, the account is never locked.
   * minimum: 0
   * @return accountLockoutThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of allowed failed login attempts before a user account is locked for a specified duration.  If `0`, the account is never locked.")

  public Long getAccountLockoutThreshold() {
    return accountLockoutThreshold;
  }


  public void setAccountLockoutThreshold(Long accountLockoutThreshold) {
    this.accountLockoutThreshold = accountLockoutThreshold;
  }


  public AccountServiceV190AccountService accounts(Object accounts) {
    
    this.accounts = accounts;
    return this;
  }

   /**
   * Get accounts
   * @return accounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAccounts() {
    return accounts;
  }


  public void setAccounts(Object accounts) {
    this.accounts = accounts;
  }


  public AccountServiceV190AccountService actions(Object actions) {
    
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getActions() {
    return actions;
  }


  public void setActions(Object actions) {
    this.actions = actions;
  }


  public AccountServiceV190AccountService activeDirectory(Object activeDirectory) {
    
    this.activeDirectory = activeDirectory;
    return this;
  }

   /**
   * Get activeDirectory
   * @return activeDirectory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getActiveDirectory() {
    return activeDirectory;
  }


  public void setActiveDirectory(Object activeDirectory) {
    this.activeDirectory = activeDirectory;
  }


  public AccountServiceV190AccountService additionalExternalAccountProviders(Object additionalExternalAccountProviders) {
    
    this.additionalExternalAccountProviders = additionalExternalAccountProviders;
    return this;
  }

   /**
   * Get additionalExternalAccountProviders
   * @return additionalExternalAccountProviders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getAdditionalExternalAccountProviders() {
    return additionalExternalAccountProviders;
  }


  public void setAdditionalExternalAccountProviders(Object additionalExternalAccountProviders) {
    this.additionalExternalAccountProviders = additionalExternalAccountProviders;
  }


  public AccountServiceV190AccountService authFailureLoggingThreshold(Long authFailureLoggingThreshold) {
    
    this.authFailureLoggingThreshold = authFailureLoggingThreshold;
    return this;
  }

   /**
   * The number of authorization failures per account that are allowed before the failed attempt is logged to the manager log.
   * minimum: 0
   * @return authFailureLoggingThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of authorization failures per account that are allowed before the failed attempt is logged to the manager log.")

  public Long getAuthFailureLoggingThreshold() {
    return authFailureLoggingThreshold;
  }


  public void setAuthFailureLoggingThreshold(Long authFailureLoggingThreshold) {
    this.authFailureLoggingThreshold = authFailureLoggingThreshold;
  }


  public AccountServiceV190AccountService description(Object description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    this.description = description;
  }


  public AccountServiceV190AccountService id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getId() {
    return id;
  }


  public void setId(Object id) {
    this.id = id;
  }


  public AccountServiceV190AccountService LDAP(Object LDAP) {
    
    this.LDAP = LDAP;
    return this;
  }

   /**
   * Get LDAP
   * @return LDAP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLDAP() {
    return LDAP;
  }


  public void setLDAP(Object LDAP) {
    this.LDAP = LDAP;
  }


  public AccountServiceV190AccountService localAccountAuth(Object localAccountAuth) {
    
    this.localAccountAuth = localAccountAuth;
    return this;
  }

   /**
   * Get localAccountAuth
   * @return localAccountAuth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLocalAccountAuth() {
    return localAccountAuth;
  }


  public void setLocalAccountAuth(Object localAccountAuth) {
    this.localAccountAuth = localAccountAuth;
  }


  public AccountServiceV190AccountService maxPasswordLength(Long maxPasswordLength) {
    
    this.maxPasswordLength = maxPasswordLength;
    return this;
  }

   /**
   * The maximum password length for this account service.
   * minimum: 0
   * @return maxPasswordLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum password length for this account service.")

  public Long getMaxPasswordLength() {
    return maxPasswordLength;
  }


  public void setMaxPasswordLength(Long maxPasswordLength) {
    this.maxPasswordLength = maxPasswordLength;
  }


  public AccountServiceV190AccountService minPasswordLength(Long minPasswordLength) {
    
    this.minPasswordLength = minPasswordLength;
    return this;
  }

   /**
   * The minimum password length for this account service.
   * minimum: 0
   * @return minPasswordLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum password length for this account service.")

  public Long getMinPasswordLength() {
    return minPasswordLength;
  }


  public void setMinPasswordLength(Long minPasswordLength) {
    this.minPasswordLength = minPasswordLength;
  }


  public AccountServiceV190AccountService name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getName() {
    return name;
  }


  public void setName(Object name) {
    this.name = name;
  }


  public AccountServiceV190AccountService oem(Object oem) {
    
    this.oem = oem;
    return this;
  }

   /**
   * Get oem
   * @return oem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOem() {
    return oem;
  }


  public void setOem(Object oem) {
    this.oem = oem;
  }


  public AccountServiceV190AccountService passwordExpirationDays(Long passwordExpirationDays) {
    
    this.passwordExpirationDays = passwordExpirationDays;
    return this;
  }

   /**
   * The number of days before account passwords in this account service will expire.
   * @return passwordExpirationDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days before account passwords in this account service will expire.")

  public Long getPasswordExpirationDays() {
    return passwordExpirationDays;
  }


  public void setPasswordExpirationDays(Long passwordExpirationDays) {
    this.passwordExpirationDays = passwordExpirationDays;
  }


  public AccountServiceV190AccountService privilegeMap(Object privilegeMap) {
    
    this.privilegeMap = privilegeMap;
    return this;
  }

   /**
   * Get privilegeMap
   * @return privilegeMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrivilegeMap() {
    return privilegeMap;
  }


  public void setPrivilegeMap(Object privilegeMap) {
    this.privilegeMap = privilegeMap;
  }


   /**
   * The set of restricted OEM privileges.
   * @return restrictedOemPrivileges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of restricted OEM privileges.")

  public List<String> getRestrictedOemPrivileges() {
    return restrictedOemPrivileges;
  }




   /**
   * The set of restricted Redfish privileges.
   * @return restrictedPrivileges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of restricted Redfish privileges.")

  public List<Object> getRestrictedPrivileges() {
    return restrictedPrivileges;
  }




  public AccountServiceV190AccountService roles(Object roles) {
    
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getRoles() {
    return roles;
  }


  public void setRoles(Object roles) {
    this.roles = roles;
  }


  public AccountServiceV190AccountService serviceEnabled(Boolean serviceEnabled) {
    
    this.serviceEnabled = serviceEnabled;
    return this;
  }

   /**
   * An indication of whether the account service is enabled.  If &#x60;true&#x60;, it is enabled.  If &#x60;false&#x60;, it is disabled and users cannot be created, deleted, or modified, and new sessions cannot be started.  However, established sessions might still continue to run.  Any service, such as the session service, that attempts to access the disabled account service fails.  However, this does not affect HTTP Basic Authentication connections.
   * @return serviceEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An indication of whether the account service is enabled.  If `true`, it is enabled.  If `false`, it is disabled and users cannot be created, deleted, or modified, and new sessions cannot be started.  However, established sessions might still continue to run.  Any service, such as the session service, that attempts to access the disabled account service fails.  However, this does not affect HTTP Basic Authentication connections.")

  public Boolean getServiceEnabled() {
    return serviceEnabled;
  }


  public void setServiceEnabled(Boolean serviceEnabled) {
    this.serviceEnabled = serviceEnabled;
  }


  public AccountServiceV190AccountService status(Object status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStatus() {
    return status;
  }


  public void setStatus(Object status) {
    this.status = status;
  }


   /**
   * The account types supported by the service.
   * @return supportedAccountTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account types supported by the service.")

  public List<Object> getSupportedAccountTypes() {
    return supportedAccountTypes;
  }




   /**
   * The OEM account types supported by the service.
   * @return supportedOEMAccountTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OEM account types supported by the service.")

  public List<String> getSupportedOEMAccountTypes() {
    return supportedOEMAccountTypes;
  }




  public AccountServiceV190AccountService taCACSplus(Object taCACSplus) {
    
    this.taCACSplus = taCACSplus;
    return this;
  }

   /**
   * Get taCACSplus
   * @return taCACSplus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTaCACSplus() {
    return taCACSplus;
  }


  public void setTaCACSplus(Object taCACSplus) {
    this.taCACSplus = taCACSplus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountServiceV190AccountService accountServiceV190AccountService = (AccountServiceV190AccountService) o;
    return Objects.equals(this.atOdataContext, accountServiceV190AccountService.atOdataContext) &&
        Objects.equals(this.atOdataEtag, accountServiceV190AccountService.atOdataEtag) &&
        Objects.equals(this.atOdataId, accountServiceV190AccountService.atOdataId) &&
        Objects.equals(this.atOdataType, accountServiceV190AccountService.atOdataType) &&
        Objects.equals(this.accountLockoutCounterResetAfter, accountServiceV190AccountService.accountLockoutCounterResetAfter) &&
        Objects.equals(this.accountLockoutCounterResetEnabled, accountServiceV190AccountService.accountLockoutCounterResetEnabled) &&
        Objects.equals(this.accountLockoutDuration, accountServiceV190AccountService.accountLockoutDuration) &&
        Objects.equals(this.accountLockoutThreshold, accountServiceV190AccountService.accountLockoutThreshold) &&
        Objects.equals(this.accounts, accountServiceV190AccountService.accounts) &&
        Objects.equals(this.actions, accountServiceV190AccountService.actions) &&
        Objects.equals(this.activeDirectory, accountServiceV190AccountService.activeDirectory) &&
        Objects.equals(this.additionalExternalAccountProviders, accountServiceV190AccountService.additionalExternalAccountProviders) &&
        Objects.equals(this.authFailureLoggingThreshold, accountServiceV190AccountService.authFailureLoggingThreshold) &&
        Objects.equals(this.description, accountServiceV190AccountService.description) &&
        Objects.equals(this.id, accountServiceV190AccountService.id) &&
        Objects.equals(this.LDAP, accountServiceV190AccountService.LDAP) &&
        Objects.equals(this.localAccountAuth, accountServiceV190AccountService.localAccountAuth) &&
        Objects.equals(this.maxPasswordLength, accountServiceV190AccountService.maxPasswordLength) &&
        Objects.equals(this.minPasswordLength, accountServiceV190AccountService.minPasswordLength) &&
        Objects.equals(this.name, accountServiceV190AccountService.name) &&
        Objects.equals(this.oem, accountServiceV190AccountService.oem) &&
        Objects.equals(this.passwordExpirationDays, accountServiceV190AccountService.passwordExpirationDays) &&
        Objects.equals(this.privilegeMap, accountServiceV190AccountService.privilegeMap) &&
        Objects.equals(this.restrictedOemPrivileges, accountServiceV190AccountService.restrictedOemPrivileges) &&
        Objects.equals(this.restrictedPrivileges, accountServiceV190AccountService.restrictedPrivileges) &&
        Objects.equals(this.roles, accountServiceV190AccountService.roles) &&
        Objects.equals(this.serviceEnabled, accountServiceV190AccountService.serviceEnabled) &&
        Objects.equals(this.status, accountServiceV190AccountService.status) &&
        Objects.equals(this.supportedAccountTypes, accountServiceV190AccountService.supportedAccountTypes) &&
        Objects.equals(this.supportedOEMAccountTypes, accountServiceV190AccountService.supportedOEMAccountTypes) &&
        Objects.equals(this.taCACSplus, accountServiceV190AccountService.taCACSplus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atOdataContext, atOdataEtag, atOdataId, atOdataType, accountLockoutCounterResetAfter, accountLockoutCounterResetEnabled, accountLockoutDuration, accountLockoutThreshold, accounts, actions, activeDirectory, additionalExternalAccountProviders, authFailureLoggingThreshold, description, id, LDAP, localAccountAuth, maxPasswordLength, minPasswordLength, name, oem, passwordExpirationDays, privilegeMap, restrictedOemPrivileges, restrictedPrivileges, roles, serviceEnabled, status, supportedAccountTypes, supportedOEMAccountTypes, taCACSplus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountServiceV190AccountService {\n");
    sb.append("    atOdataContext: ").append(toIndentedString(atOdataContext)).append("\n");
    sb.append("    atOdataEtag: ").append(toIndentedString(atOdataEtag)).append("\n");
    sb.append("    atOdataId: ").append(toIndentedString(atOdataId)).append("\n");
    sb.append("    atOdataType: ").append(toIndentedString(atOdataType)).append("\n");
    sb.append("    accountLockoutCounterResetAfter: ").append(toIndentedString(accountLockoutCounterResetAfter)).append("\n");
    sb.append("    accountLockoutCounterResetEnabled: ").append(toIndentedString(accountLockoutCounterResetEnabled)).append("\n");
    sb.append("    accountLockoutDuration: ").append(toIndentedString(accountLockoutDuration)).append("\n");
    sb.append("    accountLockoutThreshold: ").append(toIndentedString(accountLockoutThreshold)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    activeDirectory: ").append(toIndentedString(activeDirectory)).append("\n");
    sb.append("    additionalExternalAccountProviders: ").append(toIndentedString(additionalExternalAccountProviders)).append("\n");
    sb.append("    authFailureLoggingThreshold: ").append(toIndentedString(authFailureLoggingThreshold)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    LDAP: ").append(toIndentedString(LDAP)).append("\n");
    sb.append("    localAccountAuth: ").append(toIndentedString(localAccountAuth)).append("\n");
    sb.append("    maxPasswordLength: ").append(toIndentedString(maxPasswordLength)).append("\n");
    sb.append("    minPasswordLength: ").append(toIndentedString(minPasswordLength)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    oem: ").append(toIndentedString(oem)).append("\n");
    sb.append("    passwordExpirationDays: ").append(toIndentedString(passwordExpirationDays)).append("\n");
    sb.append("    privilegeMap: ").append(toIndentedString(privilegeMap)).append("\n");
    sb.append("    restrictedOemPrivileges: ").append(toIndentedString(restrictedOemPrivileges)).append("\n");
    sb.append("    restrictedPrivileges: ").append(toIndentedString(restrictedPrivileges)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    serviceEnabled: ").append(toIndentedString(serviceEnabled)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    supportedAccountTypes: ").append(toIndentedString(supportedAccountTypes)).append("\n");
    sb.append("    supportedOEMAccountTypes: ").append(toIndentedString(supportedOEMAccountTypes)).append("\n");
    sb.append("    taCACSplus: ").append(toIndentedString(taCACSplus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

