/*
 * Redfish
 * This contains the definition of a Redfish service.
 *
 * The version of the OpenAPI document: 2021.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This action replaces a certificate.
 */
@ApiModel(description = "This action replaces a certificate.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-24T10:33:09.083984300-06:00[America/Denver]")
public class CertificateServiceV104ReplaceCertificateRequestBody {
  public static final String SERIALIZED_NAME_CERTIFICATE_STRING = "CertificateString";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_STRING)
  private String certificateString;

  public static final String SERIALIZED_NAME_CERTIFICATE_TYPE = "CertificateType";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_TYPE)
  private Object certificateType = null;

  public static final String SERIALIZED_NAME_CERTIFICATE_URI = "CertificateUri";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_URI)
  private Object certificateUri = null;


  public CertificateServiceV104ReplaceCertificateRequestBody certificateString(String certificateString) {
    
    this.certificateString = certificateString;
    return this;
  }

   /**
   * The string for the certificate.
   * @return certificateString
  **/
  @ApiModelProperty(required = true, value = "The string for the certificate.")

  public String getCertificateString() {
    return certificateString;
  }


  public void setCertificateString(String certificateString) {
    this.certificateString = certificateString;
  }


  public CertificateServiceV104ReplaceCertificateRequestBody certificateType(Object certificateType) {
    
    this.certificateType = certificateType;
    return this;
  }

   /**
   * Get certificateType
   * @return certificateType
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getCertificateType() {
    return certificateType;
  }


  public void setCertificateType(Object certificateType) {
    this.certificateType = certificateType;
  }


  public CertificateServiceV104ReplaceCertificateRequestBody certificateUri(Object certificateUri) {
    
    this.certificateUri = certificateUri;
    return this;
  }

   /**
   * Get certificateUri
   * @return certificateUri
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getCertificateUri() {
    return certificateUri;
  }


  public void setCertificateUri(Object certificateUri) {
    this.certificateUri = certificateUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateServiceV104ReplaceCertificateRequestBody certificateServiceV104ReplaceCertificateRequestBody = (CertificateServiceV104ReplaceCertificateRequestBody) o;
    return Objects.equals(this.certificateString, certificateServiceV104ReplaceCertificateRequestBody.certificateString) &&
        Objects.equals(this.certificateType, certificateServiceV104ReplaceCertificateRequestBody.certificateType) &&
        Objects.equals(this.certificateUri, certificateServiceV104ReplaceCertificateRequestBody.certificateUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateString, certificateType, certificateUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateServiceV104ReplaceCertificateRequestBody {\n");
    sb.append("    certificateString: ").append(toIndentedString(certificateString)).append("\n");
    sb.append("    certificateType: ").append(toIndentedString(certificateType)).append("\n");
    sb.append("    certificateUri: ").append(toIndentedString(certificateUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

